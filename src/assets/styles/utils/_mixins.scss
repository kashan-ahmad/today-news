@mixin text-lead($font-size) {
  font-size: getRemFrom($font-size);
  font-family: $font-lead;
  font-weight: $weight-bold;
  text-transform: uppercase;
}

@mixin text-sans($font-size) {
  font-size: getRemFrom($font-size);
  font-family: $font-sans;
  font-weight: $weight-normal;
}

@mixin text-serif($font-size) {
  font-size: getRemFrom($font-size);
  font-family: $font-serif;
  font-weight: $weight-normal;
}

/// A button component.
@mixin button($font-size) {
  @include text-sans($font-size);
  display: inline-flex;
  align-items: center;
  gap: calc(calc($size-xs + 2px));
  text-transform: uppercase;
  transition: $transition-fast;
  color: var(--color-background);
  background-color: var(--color-body);
  padding: calc($size-xs - 2px) calc($size-sm + 2px);

  // Notice that the border is always there.
  border: 1px solid var(--color-body);

  &:hover {
    // We're using the HSL variants of our colors and reducing their opacity
    // with the help of the HSLA function.
    border-color: hsla(var(--color-body-hsl), 75%);
    background-color: hsla(var(--color-body-hsl), 75%);
  }

  &:focus {
    border-color: hsla(var(--color-body-hsl), 80%);
    background-color: hsla(var(--color-body-hsl), 80%);
  }
}

@mixin button-outlined($font-size) {
  @include button($font-size);

  // Notice the color inversion as compared to the normal button.
  color: var(--color-body);
  background-color: var(--color-background);

  &:hover {
    background-color: hsla(var(--color-body-hsl), 15%);
  }

  &:focus {
    background-color: hsla(var(--color-body-hsl), 20%);
  }
}

// Breakpoints.
// Sadly we can't loop over the breakpoints map cuz dynamic mixins don't exist.
@mixin breakpoint-sm {
  @media (min-width: $breakpoint-sm) {
    @content;
  }
}

@mixin breakpoint-md {
  @media (min-width: $breakpoint-md) {
    @content;
  }
}

@mixin breakpoint-lg {
  @media (min-width: $breakpoint-lg) {
    @content;
  }
}

@mixin breakpoint-xl {
  @media (min-width: $breakpoint-xl) {
    @content;
  }
}
